import discord
import random
from discord.ext import commands
from datetime import datetime
from db_manager import db_manager
from queueing import create_match
from config import MODES

class Tour:
    def __init__(self, bot, tournament_name, participants, slots):
        self.bot = bot
        self.name = tournament_name
        self.participants = participants
        self.slots = slots
        self.current_round = 1
        self.matches = []
        self.winners = []
        self.is_finished = False

    async def start_round(self):
        """–ù–∞—á–∏–Ω–∞–µ—Ç –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥ —Ç—É—Ä–Ω–∏—Ä–∞"""
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—É—Å—Ç—ã–µ —Å–ª–æ—Ç—ã –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        while len(self.participants) < self.slots:
            self.participants.append({
                "id": 0,
                "name": f"emptyslot{len(self.participants)+1}",
                "mention": "–ü—É—Å—Ç–æ–π —Å–ª–æ—Ç"
            })

        # –°–ª—É—á–∞–π–Ω–æ–µ —Ä–∞–∑–±–∏–µ–Ω–∏–µ –Ω–∞ –ø–∞—Ä—ã
        random.shuffle(self.participants)
        pairs = []
        for i in range(0, len(self.participants), 2):
            if i+1 < len(self.participants):
                pairs.append((self.participants[i], self.participants[i+1]))

        # –°–æ–∑–¥–∞–µ–º –º–∞—Ç—á–∏
        self.matches = []
        for player1, player2 in pairs:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–∞—Ä—ã —Å –¥–≤—É–º—è emptyslot
            if player1["id"] == 0 and player2["id"] == 0:
                continue

            match_id = await self.create_tournament_match(player1, player2)
            self.matches.append({
                "id": match_id,
                "player1": player1,
                "player2": player2,
                "winner": None,
                "is_finished": False
            })

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–∞–Ω–∞–ª
        await self.send_round_info()

    async def create_tournament_match(self, player1, player2):
        """–°–æ–∑–¥–∞–µ—Ç —Ç—É—Ä–Ω–∏—Ä–Ω—ã–π –º–∞—Ç—á"""
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–æ–≤
        p1_data = {
            "discord_id": player1["id"],
            "nickname": player1["name"],
            "rating": db_manager.fetchone(
                "players",
                "SELECT currentelo FROM players WHERE discordid = ?",
                (str(player1["id"]),)
            )[0] if player1["id"] != 0 else 0,
            "channel_id": None,  # –î–ª—è —Ç—É—Ä–Ω–∏—Ä–Ω—ã—Ö –º–∞—Ç—á–µ–π –Ω–µ –Ω—É–∂–µ–Ω
            "join_time": datetime.now()
        }

        p2_data = {
            "discord_id": player2["id"],
            "nickname": player2["name"],
            "rating": db_manager.fetchone(
                "players",
                "SELECT currentelo FROM players WHERE discordid = ?",
                (str(player2["id"]),)
            )[0] if player2["id"] != 0 else 0,
            "channel_id": None,
            "join_time": datetime.now()
        }

        # –ï—Å–ª–∏ –æ–¥–∏–Ω –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ - emptyslot, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏—Å—É–∂–¥–∞–µ–º –ø–æ–±–µ–¥—É
        if player1["id"] == 0 or player2["id"] == 0:
            winner = player2 if player1["id"] == 0 else player1
            match_id = await create_match(
                MODES["station5f"],
                p1_data,
                p2_data,
                matchtype=2,
                tournament_id=self.name
            )
            
            # –ü–æ–º–µ—á–∞–µ–º –º–∞—Ç—á –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
            winner_score = 1 if winner["id"] == player1["id"] else 0
            loser_score = 1 - winner_score
            
            db_manager.execute(
                'matches',
                """
                UPDATE matches 
                SET player1score = ?, player2score = ?, isover = 1, isverified = 1
                WHERE matchid = ?
                """,
                (winner_score, loser_score, match_id)
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
            self.winners.append(winner)
            return match_id

        # –°–æ–∑–¥–∞–µ–º –æ–±—ã—á–Ω—ã–π —Ç—É—Ä–Ω–∏—Ä–Ω—ã–π –º–∞—Ç—á
        match_id = await create_match(
            MODES["station5f"],
            p1_data,
            p2_data,
            matchtype=2,
            tournament_id=self.name
        )
        return match_id

    async def send_round_info(self):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–º —Ä–∞—É–Ω–¥–µ –≤ –∫–∞–Ω–∞–ª"""
        # –ù–∞—Ö–æ–¥–∏–º –∫–∞–Ω–∞–ª matches
        channel = discord.utils.get(
            self.bot.get_all_channels(),
            name=f"{self.name}-matches"
        )
        
        if not channel:
            return

        embed = discord.Embed(
            title=f"üéÆ –¢—É—Ä–Ω–∏—Ä {self.name} - –†–∞—É–Ω–¥ {self.current_round}",
            description="–°–ø–∏—Å–æ–∫ –º–∞—Ç—á–µ–π —Ç–µ–∫—É—â–µ–≥–æ —Ä–∞—É–Ω–¥–∞:",
            color=discord.Color.gold()
        )

        for match in self.matches:
            p1 = match["player1"]
            p2 = match["player2"]
            
            embed.add_field(
                name=f"–ú–∞—Ç—á #{match['id']}",
                value=f"{p1['name']} vs {p2['name']}",
                inline=False
            )

        embed.set_footer(text=f"–í—Å–µ–≥–æ –º–∞—Ç—á–µ–π: {len(self.matches)}")
        await channel.send(embed=embed)

    async def check_round_completion(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –≤—Å–µ—Ö –º–∞—Ç—á–µ–π —Ä–∞—É–Ω–¥–∞"""
        for match in self.matches:
            if not match["is_finished"]:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –º–∞—Ç—á–∞ –≤ –ë–î
                match_data = db_manager.fetchone(
                    'matches',
                    "SELECT isover FROM matches WHERE matchid = ?",
                    (match["id"],)
                )
                
                if match_data and match_data[0] == 1:
                    match["is_finished"] = True
                    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
                    winner_data = db_manager.fetchone(
                        'matches',
                        """
                        SELECT 
                            CASE WHEN player1score > player2score THEN player1 
                                 ELSE player2 
                            END as winner
                        FROM matches 
                        WHERE matchid = ?
                        """,
                        (match["id"],)
                    )
                    if winner_data:
                        winner_name = winner_data[0]
                        winner = next(
                            (p for p in [match["player1"], match["player2"]] 
                             if p["name"] == winner_name),
                            None
                        )
                        if winner:
                            match["winner"] = winner
                            self.winners.append(winner)

        # –ï—Å–ª–∏ –≤—Å–µ –º–∞—Ç—á–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞—É–Ω–¥—É
        if all(m["is_finished"] for m in self.matches):
            if len(self.winners) == 1:
                # –¢—É—Ä–Ω–∏—Ä –∑–∞–≤–µ—Ä—à–µ–Ω
                await self.finish_tournament()
            else:
                # –ù–∞—á–∏–Ω–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞—É–Ω–¥
                self.current_round += 1
                self.participants = self.winners
                self.winners = []
                self.matches = []
                await self.start_round()

    async def finish_tournament(self):
        """–ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ç—É—Ä–Ω–∏—Ä –∏ –æ–±—ä—è–≤–ª—è–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è"""
        self.is_finished = True
        winner = self.winners[0]
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        results_channel = discord.utils.get(
            self.bot.get_all_channels(),
            name=f"{self.name}-results"
        )
        
        if results_channel:
            embed = discord.Embed(
                title=f"üèÜ –¢—É—Ä–Ω–∏—Ä {self.name} –∑–∞–≤–µ—Ä—à–µ–Ω!",
                description=f"–ü–æ–±–µ–¥–∏—Ç–µ–ª—å: {winner['name']}",
                color=discord.Color.gold()
            )
            embed.set_thumbnail(url="https://i.imgur.com/xyz.png")  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
            await results_channel.send(embed=embed)

    async def set_winner(self, match_id, winner_name):
        """–í—Ä—É—á–Ω—É—é —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è –º–∞—Ç—á–∞"""
        match = next((m for m in self.matches if m["id"] == match_id), None)
        if not match:
            return False

        winner = next(
            (p for p in [match["player1"], match["player2"]] 
             if p["name"] == winner_name),
            None
        )
        
        if not winner:
            return False

        # –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Ç—á –≤ –ë–î
        winner_score = 1 if winner["id"] == match["player1"]["id"] else 0
        loser_score = 1 - winner_score
        
        db_manager.execute(
            'matches',
            """
            UPDATE matches 
            SET player1score = ?, player2score = ?, isover = 1, isverified = 1
            WHERE matchid = ?
            """,
            (winner_score, loser_score, match_id)
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞—Ç—á–µ
        match["winner"] = winner
        match["is_finished"] = True
        self.winners.append(winner)
        
        return True