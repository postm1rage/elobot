import logging
from dotenv import load_dotenv
import os
from datetime import datetime
from config import (
    bot,
    db,
    matches_db,
    MODERATOR_ID,
    MODE_NAMES,
    VERIFY_CHANNEL_NAME,
    RESULTS_CHANNEL_NAME,
    MODERATOR_ID,
    LEADERBOARD_MODES,
    MODES,
)
from verification import (
    setup_verified_role,
    setup as setup_verification,
    VerifyView,
)  # –î–æ–±–∞–≤–ª–µ–Ω VerifyView
from queueing import setup as setup_queueing, ConfirmMatchView, find_match
from queueing import check_expired_matches
import re
from discord.ui import View, Button, Select
import discord


load_dotenv()
token = os.getenv("DISCORD_TOKEN")

handler = logging.FileHandler(filename="discord.log", encoding="utf-8", mode="w")


@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user.name} –∑–∞–ø—É—â–µ–Ω!")

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –≤ –ë–î
    try:
        c = db.cursor()
        c.execute("UPDATE players SET in_queue = 0")
        db.commit()
        print("[INIT] –°–±—Ä–æ—à–µ–Ω—ã —Ñ–ª–∞–≥–∏ in_queue –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤")
    except Exception as e:
        print(f"[INIT] –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–ª–∞–≥–æ–≤: {e}")

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—á–µ—Ä–µ–¥–∏ –∏–∑ –ë–î
    try:
        c = db.cursor()
        c.execute("SELECT playername, discordid FROM players WHERE in_queue = 1")
        players_in_queue = c.fetchall()
    except Exception as e:
        print(f"[INIT] –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏: {e}")

    # –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    bot.loop.create_task(check_expired_matches(bot))

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–æ–ª–∏/–∫–∞–Ω–∞–ª—ã
    for guild in bot.guilds:
        queue_channel = discord.utils.get(guild.text_channels, name="elobot-queue")
        results_channel = discord.utils.get(guild.text_channels, name="elobot-results")

        if not queue_channel:
            print(f"‚ö†Ô∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ '{guild.name}' –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞ 'elobot-queue'")
        if not results_channel:
            print(f"‚ö†Ô∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ '{guild.name}' –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞ 'elobot-results'")

        verify_channel = discord.utils.get(guild.text_channels, name="elobot-verify")
        logs_channel = discord.utils.get(guild.text_channels, name="elobot-logs")

        if not verify_channel:
            print(f"‚ö†Ô∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ '{guild.name}' –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞ 'elobot-verify'")
        if not logs_channel:
            print(f"‚ö†Ô∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ '{guild.name}' –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞ 'elobot-logs'")


@bot.event
async def setup_hook():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ö—É–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á"""
    bot.loop.create_task(find_match())


bot.remove_command("help")


@bot.command()
async def help(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ"""
    embed = discord.Embed(
        title="üìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º ELO Bot",
        description="–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–π—Ç–∏–Ω–≥–∞",
        color=discord.Color.blurple(),
    )

    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    embed.add_field(
        name="üéÆ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã",
        value=(
            "`.play` - –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –º–∞—Ç—á–∞\n"
            "`.leave` - –ü–æ–∫–∏–Ω—É—Ç—å –æ—á–µ—Ä–µ–¥—å\n"
            "`.giveup` - –°–¥–∞—Ç—å—Å—è –≤ —Ç–µ–∫—É—â–µ–º –º–∞—Ç—á–µ\n"
            "`.queue` - –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–µ—Ä–µ–¥–µ–π"
        ),
        inline=False,
    )

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    embed.add_field(
        name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        value=(
            "`.playerinfo <–Ω–∏–∫>` - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ\n"
            "`.leaderboard` - –¢–∞–±–ª–∏—Ü–∞ –ª–∏–¥–µ—Ä–æ–≤"
        ),
        inline=False,
    )

    # –û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å
    embed.add_field(
        name="‚ö†Ô∏è –û—Ç—á–µ—Ç–Ω–æ—Å—Ç—å",
        value=(
            "`.report <ID –º–∞—Ç—á–∞> <–ø—Ä–∏—á–∏–Ω–∞>` - –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –º–∞—Ç—á\n"
            "`.result <ID> <—Å—á–µ—Ç>` –≤ –õ–° –±–æ—Ç–∞ - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø–æ–±–µ–¥–∏—Ç–µ–ª—è)"
        ),
        inline=False,
    )

    # –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
    embed.add_field(
        name="üîê –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è",
        value=(
            f"–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫ –∏ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –≤ –∫–∞–Ω–∞–ª "
            f"<#{discord.utils.get(ctx.guild.channels, name='elobot-verify').id}>"
        ),
        inline=False,
    )

    # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    embed.add_field(
        name="‚ÑπÔ∏è –°–∏—Å—Ç–µ–º–∞",
        value=(
            "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–∞—Ç—á–µ–π —á–µ—Ä–µ–∑ 1 —á–∞—Å\n"
            "ELO-—Ä–µ–π—Ç–∏–Ω–≥ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –º–∞—Ç—á–∞\n"
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ—Ä–∞–∂–µ–Ω–∏—è –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è"
        ),
        inline=False,
    )

    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {ctx.author.display_name}")
    await ctx.send(embed=embed)


@bot.command()
async def playerinfo(ctx, nickname: str):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–∫–µ"""
    c = db.cursor()
    c.execute(
        """
    SELECT playerid, playername, currentelo, 
           elo_station5f, elo_mots, elo_12min,
           wins, losses, ties
    FROM players
    WHERE playername = ?
    """,
        (nickname,),
    )

    player = c.fetchone()

    if player:
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ç—á–µ–π
        total_matches = player[6] + player[7] + player[8]  # wins + losses + ties

        player_data = {
            "id": player[0],
            "name": player[1],
            "elo": player[2],
            "elo_station5f": player[3],
            "elo_mots": player[4],
            "elo_12min": player[5],
            "wins": player[6],
            "losses": player[7],
            "ties": player[8],
            "matches": total_matches,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        }

        embed = discord.Embed(
            title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ {player_data['name']}",
            color=discord.Color.blue(),
        )
        embed.add_field(name="ID", value=player_data["id"], inline=True)
        embed.add_field(name="–û–±—â–∏–π ELO", value=player_data["elo"], inline=True)
        embed.add_field(
            name="ELO Station", value=player_data["elo_station5f"], inline=True
        )
        embed.add_field(name="ELO MotS", value=player_data["elo_mots"], inline=True)
        embed.add_field(name="ELO 12min", value=player_data["elo_12min"], inline=True)
        embed.add_field(name="–ü–æ–±–µ–¥—ã", value=player_data["wins"], inline=True)
        embed.add_field(name="–ü–æ—Ä–∞–∂–µ–Ω–∏—è", value=player_data["losses"], inline=True)
        embed.add_field(name="–ù–∏—á—å–∏", value=player_data["ties"], inline=True)
        embed.add_field(name="–í—Å–µ–≥–æ –º–∞—Ç—á–µ–π", value=player_data["matches"], inline=True)

        await ctx.send(embed=embed)
    else:
        await ctx.send(f"–ò–≥—Ä–æ–∫ —Å –Ω–∏–∫–æ–º '{nickname}' –Ω–µ –Ω–∞–π–¥–µ–Ω")


@bot.command()
async def leaderboard(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤ —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –ø–æ —Ä–µ–∂–∏–º–∞–º"""

    class LeaderboardView(View):
        def __init__(self):
            super().__init__(timeout=30)
            self.selected_mode = None

            options = [
                discord.SelectOption(
                    label="Overall", value="overall", description="–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥"
                ),
                discord.SelectOption(label="Station 5 Flags", value="station5flags"),
                discord.SelectOption(label="MotS Solo", value="mots"),
                discord.SelectOption(label="12 Minute", value="12min"),
            ]

            select = Select(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º", options=options)
            select.callback = self.select_callback
            self.add_item(select)

        async def select_callback(self, interaction: discord.Interaction):
            if interaction.user.id != ctx.author.id:
                await interaction.response.send_message(
                    "–≠—Ç–æ –Ω–µ –≤–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞!", ephemeral=True
                )
                return

            self.selected_mode = interaction.data["values"][0]
            await interaction.response.defer()
            self.stop()

    view = LeaderboardView()
    msg = await ctx.send("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã –ª–∏–¥–µ—Ä–æ–≤:", view=view)

    if await view.wait() or not view.selected_mode:
        await msg.edit(content="–í—Ä–µ–º—è –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–µ–∫–ª–æ", view=None)
        return

    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
    c = db.cursor()
    elo_col, wins_col, losses_col, ties_col = LEADERBOARD_MODES[view.selected_mode]

    c.execute(
        f"""
    SELECT playername, {elo_col}, {wins_col}, {losses_col}, {ties_col}
    FROM players 
    ORDER BY {elo_col} DESC 
    LIMIT 10
    """
    )

    leaders = c.fetchall()

    # –§–æ—Ä–º–∏—Ä—É–µ–º embed
    mode_names = {
        "overall": "–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥",
        "station5flags": "Station 5 Flags",
        "mots": "MotS Solo",
        "12min": "12 Minute",
    }

    embed = discord.Embed(
        title=f"üèÜ –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤: {mode_names[view.selected_mode]}",
        color=discord.Color.gold(),
    )

    for i, (name, elo, wins, losses, ties) in enumerate(leaders, 1):
        total = wins + losses + ties
        winrate = (wins / total * 100) if total > 0 else 0

        embed.add_field(
            name=f"{i}. {name}",
            value=(
                f"ELO: {elo}\n"
                f"–ü–æ–±–µ–¥—ã: {wins} | –ü–æ—Ä–∞–∂–µ–Ω–∏—è: {losses} | –ù–∏—á—å–∏: {ties}\n"
                f"–í–∏–Ω—Ä–µ–π—Ç: {winrate:.1f}%"
            ),
            inline=False,
        )

    embed.set_footer(text=f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d %H:%M')}")
    await msg.edit(content=None, embed=embed, view=None)


@bot.event
async def on_message(message):
    if message.author.bot:
        return

    # –î–æ–±–∞–≤–∏–º –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ #{message.channel.name}: {message.content[:20]}...")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–∞ –¢–û–õ–¨–ö–û –≤ –∫–∞–Ω–∞–ª–µ elobot-results
    if message.channel.name == "elobot-results" and message.attachments:
        # –ü–∞—Ä—Å–∏–º —Å—á–µ—Ç
        score_match = re.search(r"(\d+)\s*-\s*(\d+)", message.content)
        if not score_match:
            return

        score1 = int(score_match.group(1))
        score2 = int(score_match.group(2))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ —Å—á–µ—Ç–∞
        if score1 == score2:
            await message.channel.send(
                "‚ùå –°—á–µ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω—ã–º! –ú–∞—Ç—á –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è."
            )
            return

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
        winner_score = max(score1, score2)
        loser_score = min(score1, score2)
        is_player1_winner = score1 > score2

        # –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –º–∞—Ç—á –∏–≥—Ä–æ–∫–∞
        c = db.cursor()
        c.execute(
            "SELECT playername FROM players WHERE discordid = ?",
            (str(message.author.id),),
        )
        player_data = c.fetchone()
        if not player_data:
            await message.channel.send("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
            return

        nickname = player_data[0]

        c = matches_db.cursor()
        c.execute(
            """
            SELECT matchid, player1, player2, mode 
            FROM matches 
            WHERE (player1 = ? OR player2 = ?) 
            AND isover = 0
            """,
            (nickname, nickname),
        )
        match_data = c.fetchone()

        if not match_data:
            await message.channel.send("‚ùå –ê–∫—Ç–∏–≤–Ω—ã–π –º–∞—Ç—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        match_id, player1, player2, mode = match_data

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –ø–æ–±–µ–¥–∏—Ç–µ–ª—å
        if is_player1_winner and nickname != player1:
            await message.channel.send(
                f"‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å ({player1})!"
            )
            return
        elif not is_player1_winner and nickname != player2:
            await message.channel.send(
                f"‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å ({player2})!"
            )
            return

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —Å—á–µ—Ç–∞
        if nickname == player1:
            player1_score, player2_score = score1, score2
            winner, loser = player1, player2
        else:
            player1_score, player2_score = score2, score1
            winner, loser = player2, player1

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –º–∞—Ç—á–∞
        c.execute(
            """
            UPDATE matches 
            SET player1score = ?, player2score = ?
            WHERE matchid = ?
            """,
            (player1_score, player2_score, match_id),
        )
        matches_db.commit()

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ –ë–î
        c = db.cursor()
        if player1_score > player2_score:
            # –ü–æ–±–µ–¥–∞ player1
            c.execute(
                "UPDATE players SET wins = wins + 1 WHERE playername = ?", (winner,)
            )
            c.execute(
                "UPDATE players SET losses = losses + 1 WHERE playername = ?", (loser,)
            )

            if mode == MODES["station5f"]:
                c.execute(
                    "UPDATE players SET wins_station5f = wins_station5f + 1 WHERE playername = ?",
                    (winner,),
                )
                c.execute(
                    "UPDATE players SET losses_station5f = losses_station5f + 1 WHERE playername = ?",
                    (loser,),
                )
            elif mode == MODES["mots"]:
                c.execute(
                    "UPDATE players SET wins_mots = wins_mots + 1 WHERE playername = ?",
                    (winner,),
                )
                c.execute(
                    "UPDATE players SET losses_mots = losses_mots + 1 WHERE playername = ?",
                    (loser,),
                )
            elif mode == MODES["12min"]:
                c.execute(
                    "UPDATE players SET wins_12min = wins_12min + 1 WHERE playername = ?",
                    (winner,),
                )
                c.execute(
                    "UPDATE players SET losses_12min = losses_12min + 1 WHERE playername = ?",
                    (loser,),
                )

        elif player1_score < player2_score:
            # –ü–æ–±–µ–¥–∞ player2
            c.execute(
                "UPDATE players SET wins = wins + 1 WHERE playername = ?", (winner,)
            )
            c.execute(
                "UPDATE players SET losses = losses + 1 WHERE playername = ?", (loser,)
            )

            if mode == MODES["station5f"]:
                c.execute(
                    "UPDATE players SET wins_station5f = wins_station5f + 1 WHERE playername = ?",
                    (winner,),
                )
                c.execute(
                    "UPDATE players SET losses_station5f = losses_station5f + 1 WHERE playername = ?",
                    (loser,),
                )
            elif mode == MODES["mots"]:
                c.execute(
                    "UPDATE players SET wins_mots = wins_mots + 1 WHERE playername = ?",
                    (winner,),
                )
                c.execute(
                    "UPDATE players SET losses_mots = losses_mots + 1 WHERE playername = ?",
                    (loser,),
                )
            elif mode == MODES["12min"]:
                c.execute(
                    "UPDATE players SET wins_12min = wins_12min + 1 WHERE playername = ?",
                    (winner,),
                )
                c.execute(
                    "UPDATE players SET losses_12min = losses_12min + 1 WHERE playername = ?",
                    (loser,),
                )
        else:
            # –ù–∏—á—å—è
            c.execute(
                "UPDATE players SET ties = ties + 1 WHERE playername IN (?, ?)",
                (player1, player2),
            )

            if mode == MODES["station5f"]:
                c.execute(
                    "UPDATE players SET ties_station5f = ties_station5f + 1 WHERE playername IN (?, ?)",
                    (player1, player2),
                )
            elif mode == MODES["mots"]:
                c.execute(
                    "UPDATE players SET ties_mots = ties_mots + 1 WHERE playername IN (?, ?)",
                    (player1, player2),
                )
            elif mode == MODES["12min"]:
                c.execute(
                    "UPDATE players SET ties_12min = ties_12min + 1 WHERE playername IN (?, ?)",
                    (player1, player2),
                )

        db.commit()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        moderator = await bot.fetch_user(MODERATOR_ID)
        embed = discord.Embed(
            title="‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –º–∞—Ç—á–∞",
            description=(
                f"**Match ID:** {match_id}\n"
                f"**–†–µ–∂–∏–º:** {MODE_NAMES.get(mode, 'Unknown')}\n"
                f"**{player1}** vs **{player2}**\n"
                f"**–°—á–µ—Ç:** {player1_score}-{player2_score}"
            ),
            color=discord.Color.orange(),
        )

        view = ConfirmMatchView(match_id, bot, message.id)

        await moderator.send(
            embed=embed,
            view=view,
            files=[await attachment.to_file() for attachment in message.attachments],
        )

        try:
            await message.delete()
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –º–∞—Ç—á–∞ —É–¥–∞–ª–µ–Ω–æ: {message.id}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return

    # –í—Å–µ–≥–¥–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–æ—Å–ª–µ –Ω–∞—à–µ–π –∫–∞—Å—Ç–æ–º–Ω–æ–π –ª–æ–≥–∏–∫–∏
    await bot.process_commands(message)


# –ó–∞–∫—Ä—ã—Ç–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
@bot.event
async def on_disconnect():
    matches_db.close()
    db.close()
    print("–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç—ã")


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π
setup_queueing(bot)
setup_verification(bot)

bot.run(token, log_handler=handler, log_level=logging.DEBUG)
