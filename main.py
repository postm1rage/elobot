import logging
from dotenv import load_dotenv
import os
from datetime import datetime
from role_manager import setup_role_manager
from nickname_updater import setup_nickname_updater
from tournaments import setup as setup_tournaments
import tournament_test
from config import (
    bot,
    MODERATOR_ID,
    MODE_NAMES,
    VERIFY_CHANNEL_NAME,
    RESULTS_CHANNEL_NAME,
    LEADERBOARD_MODES,
    MODES,
)
from verification import (
    setup_verified_role,
    setup as setup_verification,
    VerifyView,
)
from ban import setup as setup_ban
from queueing import setup as setup_queueing, ConfirmMatchView, find_match
from queueing import check_expired_matches
import re
from discord.ui import View, Button, Select
import discord
from db_manager import db_manager

load_dotenv()
token = os.getenv("DISCORD_TOKEN")

handler = logging.FileHandler(filename="discord.log", encoding="utf-8", mode="w")


class LeaderboardView(discord.ui.View):
    """View —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞"""

    def __init__(self, current_mode):
        super().__init__(timeout=180)
        self.current_mode = current_mode

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—Å–µ—Ö —Ä–µ–∂–∏–º–æ–≤
        modes = [
            ("üåü –û–±—â–∏–π", "overall", discord.ButtonStyle.green),
            ("üö© Station", "station5flags", discord.ButtonStyle.blurple),
            ("üî´ MotS", "mots", discord.ButtonStyle.red),
            ("‚è± 12min", "12min", discord.ButtonStyle.grey),
        ]

        for label, mode, style in modes:
            # –î–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ –¥–µ–ª–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–π
            disabled = mode == current_mode
            button = discord.ui.Button(
                label=label, style=style, custom_id=f"lb_{mode}", disabled=disabled
            )
            button.callback = lambda i, m=mode: self.button_callback(i, m)
            self.add_item(button)

    async def button_callback(self, interaction: discord.Interaction, mode: str):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏"""
        # –û–±–Ω–æ–≤–ª—è–µ–º –ª–∏–¥–µ—Ä–±–æ—Ä–¥ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
        await send_leaderboard(interaction, mode)
        await interaction.response.defer()

    async def on_timeout(self):
        """–î–µ–ª–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –ø–æ—Å–ª–µ —Ç–∞–π–º–∞—É—Ç–∞"""
        for item in self.children:
            if isinstance(item, discord.ui.Button):
                item.disabled = True
        try:
            await self.message.edit(view=self)
        except:
            pass


@bot.event
async def on_ready():
    print(f"–ë–æ—Ç {bot.user.name} –∑–∞–ø—É—â–µ–Ω!")

    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥–∏ –≤ –æ—á–µ—Ä–µ–¥–∏ –≤ –ë–î
    try:
        db_manager.execute("players", "UPDATE players SET in_queue = 0")
        print("[INIT] –°–±—Ä–æ—à–µ–Ω—ã —Ñ–ª–∞–≥–∏ in_queue –¥–ª—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤")
    except Exception as e:
        print(f"[INIT] –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Ñ–ª–∞–≥–æ–≤: {e}")

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—á–µ—Ä–µ–¥–∏ –∏–∑ –ë–î
    try:
        players_in_queue = db_manager.fetchall(
            "players", "SELECT playername, discordid FROM players WHERE in_queue = 1"
        )
    except Exception as e:
        print(f"[INIT] –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏: {e}")

    # –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω–æ–≤—É—é –∑–∞–¥–∞—á—É
    bot.loop.create_task(check_expired_matches(bot))

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ —Å–æ–∑–¥–∞—ë–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ä–æ–ª–∏/–∫–∞–Ω–∞–ª—ã
    for guild in bot.guilds:
        queue_channel = discord.utils.get(guild.text_channels, name="elobot-queue")
        results_channel = discord.utils.get(guild.text_channels, name="elobot-results")

        if not queue_channel:
            print(f"‚ö†Ô∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ '{guild.name}' –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞ 'elobot-queue'")
        if not results_channel:
            print(f"‚ö†Ô∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ '{guild.name}' –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞ 'elobot-results'")

        verify_channel = discord.utils.get(guild.text_channels, name="elobot-verify")
        logs_channel = discord.utils.get(guild.text_channels, name="elobot-logs")

        if not verify_channel:
            print(f"‚ö†Ô∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ '{guild.name}' –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞ 'elobot-verify'")
        if not logs_channel:
            print(f"‚ö†Ô∏è –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ '{guild.name}' –Ω–µ—Ç –∫–∞–Ω–∞–ª–∞ 'elobot-logs'")


bot.remove_command("help")


@bot.command()
async def help(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞"""
    embed = discord.Embed(
        title="üìö –ü–æ–ª–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º ELO Bot",
        description="–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π —Ä–µ–π—Ç–∏–Ω–≥–∞",
        color=discord.Color.blue(),
    )

    # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    embed.add_field(
        name="üéÆ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã",
        value=(
            "`.play` - –ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ –º–∞—Ç—á–∞ (–¥–æ—Å—Ç—É–ø–Ω–æ –≤ elobot-queue)\n"
            "`.leave` - –ü–æ–∫–∏–Ω—É—Ç—å –æ—á–µ—Ä–µ–¥—å (–¥–æ—Å—Ç—É–ø–Ω–æ –≤ elobot-queue)\n"
            "`.giveup` - –°–¥–∞—Ç—å—Å—è –≤ —Ç–µ–∫—É—â–µ–º –º–∞—Ç—á–µ\n"
            "`.queue` - –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ—á–µ—Ä–µ–¥–µ–π (–¥–æ—Å—Ç—É–ø–Ω–æ –≤ elobot-queue)\n"
            "`.report <ID –º–∞—Ç—á–∞> <–ø—Ä–∏—á–∏–Ω–∞>` - –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –º–∞—Ç—á"
        ),
        inline=False,
    )

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    embed.add_field(
        name="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        value=(
            "`.playerinfo <–Ω–∏–∫>` - –ü–æ–ª–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞\n"
            "`.leaderboard` - –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤ —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –ø–æ —Ä–µ–∂–∏–º–∞–º\n"
            "`.matchinfo <ID>` - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –º–∞—Ç—á–µ"
        ),
        inline=False,
    )

    # –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è
    embed.add_field(
        name="üîê –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è",
        value=(
            "–î–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ –∫–∞–Ω–∞–ª #elobot-verify:\n"
            "1. –í–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫\n"
            "2. –°–∫—Ä–∏–Ω—à–æ—Ç –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –≤ –∏–≥—Ä–µ\n\n"
            "–ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º"
        ),
        inline=False,
    )

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    embed.add_field(
        name="üì® –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
        value=(
            "**–ü–æ–±–µ–¥–∏—Ç–µ–ª—å** –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –õ–° –±–æ—Ç—É:\n"
            "`.result <ID –º–∞—Ç—á–∞> <—Å—á–µ—Ç>` —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–Ω—ã–º —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º\n"
            "–ü—Ä–∏–º–µ—Ä: `.result 42 5-3`\n\n"
            "‚ùó –ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ - —Å—á–µ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –≤—Ç–æ—Ä–æ–µ - –ø—Ä–æ–∏–≥—Ä–∞–≤—à–µ–≥–æ"
        ),
        inline=False,
    )

    # –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    embed.add_field(
        name="‚öôÔ∏è –°–∏—Å—Ç–µ–º–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
        value=(
            "‚Ä¢ –ú–∞—Ç—á–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≤–µ—Ä—à–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ 1 —á–∞—Å\n"
            "‚Ä¢ ELO –ø–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–≥–æ –º–∞—Ç—á–∞\n"
            "‚Ä¢ –ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏—è –Ω–∞–∑–Ω–∞—á–∞—é—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ—Ä–∞–∂–µ–Ω–∏—è\n"
            "‚Ä¢ –°–ø–æ—Ä–Ω—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ —Ä–µ—à–∞—é—Ç—Å—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏"
        ),
        inline=False,
    )

    # –ü–æ–¥–¥–µ—Ä–∂–∫–∞
    embed.add_field(
        name="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞",
        value=("–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –∏ –æ—à–∏–±–∫–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ @postm1rage\n"),
        inline=False,
    )

    embed.set_footer(text=f"–ó–∞–ø—Ä–æ—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {ctx.author.display_name}")

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª–∞–º
    view = discord.ui.View()
    view.add_item(
        discord.ui.Button(
            label="–ö–∞–Ω–∞–ª –æ—á–µ—Ä–µ–¥–∏",
            style=discord.ButtonStyle.link,
            url=f"https://discord.com/channels/{ctx.guild.id}/{discord.utils.get(ctx.guild.channels, name='elobot-queue').id}",
        )
    )
    view.add_item(
        discord.ui.Button(
            label="–ö–∞–Ω–∞–ª –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏",
            style=discord.ButtonStyle.link,
            url=f"https://discord.com/channels/{ctx.guild.id}/{discord.utils.get(ctx.guild.channels, name='elobot-verify').id}",
        )
    )
    view.add_item(
        discord.ui.Button(
            label="–ö–∞–Ω–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤",
            style=discord.ButtonStyle.link,
            url=f"https://discord.com/channels/{ctx.guild.id}/{discord.utils.get(ctx.guild.channels, name='elobot-results').id}",
        )
    )

    await ctx.send(embed=embed, view=view)


@bot.command()
async def playerinfo(ctx, nickname: str):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–∫–µ"""
    player = db_manager.fetchone(
        "players",
        """
        SELECT playerid, playername, currentelo, 
               elo_station5f, elo_mots, elo_12min,
               wins, losses, ties
        FROM players
        WHERE playername = ?
        """,
        (nickname,),
    )

    if player:
        total_matches = player[6] + player[7] + player[8]  # wins + losses + ties

        player_data = {
            "id": player[0],
            "name": player[1],
            "elo": player[2],
            "elo_station5f": player[3],
            "elo_mots": player[4],
            "elo_12min": player[5],
            "wins": player[6],
            "losses": player[7],
            "ties": player[8],
            "matches": total_matches,
        }

        embed = discord.Embed(
            title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–≥—Ä–æ–∫–µ {player_data['name']}",
            color=discord.Color.blue(),
        )
        embed.add_field(name="ID", value=player_data["id"], inline=True)
        embed.add_field(name="–û–±—â–∏–π ELO", value=player_data["elo"], inline=True)
        embed.add_field(
            name="ELO Station", value=player_data["elo_station5f"], inline=True
        )
        embed.add_field(name="ELO MotS", value=player_data["elo_mots"], inline=True)
        embed.add_field(name="ELO 12min", value=player_data["elo_12min"], inline=True)
        embed.add_field(name="–ü–æ–±–µ–¥—ã", value=player_data["wins"], inline=True)
        embed.add_field(name="–ü–æ—Ä–∞–∂–µ–Ω–∏—è", value=player_data["losses"], inline=True)
        embed.add_field(name="–ù–∏—á—å–∏", value=player_data["ties"], inline=True)
        embed.add_field(name="–í—Å–µ–≥–æ –º–∞—Ç—á–µ–π", value=player_data["matches"], inline=True)

        await ctx.send(embed=embed)
    else:
        await ctx.send(f"–ò–≥—Ä–æ–∫ —Å –Ω–∏–∫–æ–º '{nickname}' –Ω–µ –Ω–∞–π–¥–µ–Ω")


@bot.command()
async def leaderboard(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –≤—ã–±–æ—Ä–∞ —Ä–µ–∂–∏–º–∞"""
    await send_leaderboard(ctx, "overall")


async def send_leaderboard(source, mode_key):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ª–∏–¥–µ—Ä–±–æ—Ä–¥–∞"""
    elo_col, wins_col, losses_col, ties_col = LEADERBOARD_MODES[mode_key]

    leaders = db_manager.fetchall(
        "players",
        f"""
        SELECT playername, {elo_col}, {wins_col}, {losses_col}, {ties_col}
        FROM players 
        ORDER BY {elo_col} DESC 
        LIMIT 10
        """,
    )

    mode_names = {
        "overall": "–û–±—â–∏–π —Ä–µ–π—Ç–∏–Ω–≥",
        "station5flags": "Station 5 Flags",
        "mots": "MotS Solo",
        "12min": "12 Minute",
    }

    embed = discord.Embed(
        title=f"üèÜ –¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤: {mode_names[mode_key]}",
        color=discord.Color.gold(),
    )

    for i, (name, elo, wins, losses, ties) in enumerate(leaders, 1):
        total = wins + losses + ties
        winrate = (wins / total * 100) if total > 0 else 0

        embed.add_field(
            name=f"{i}. {name}",
            value=(
                f"ELO: {elo}\n"
                f"–ü–æ–±–µ–¥—ã: {wins} | –ü–æ—Ä–∞–∂–µ–Ω–∏—è: {losses} | –ù–∏—á—å–∏: {ties}\n"
                f"–í–∏–Ω—Ä–µ–π—Ç: {winrate:.1f}%"
            ),
            inline=False,
        )

    embed.set_footer(text=f"–û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d %H:%M')}")

    view = LeaderboardView(mode_key)

    if isinstance(source, discord.Interaction):
        view.message = source.message
        await source.message.edit(embed=embed, view=view)
    else:
        source.leaderboard_message = await source.send(embed=embed, view=view)


@bot.event
async def on_message(message):
    if message.author.bot:
        return

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    channel_info = (
        f"–õ–° –±–æ—Ç–∞"
        if isinstance(message.channel, discord.DMChannel)
        else f"#{message.channel.name}"
    )
    print(f"[–°–æ–æ–±—â–µ–Ω–∏–µ] {message.author} ({channel_info}): {message.content[:100]}...")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ –≤ –õ–°
    if isinstance(message.channel, discord.DMChannel):
        ctx = await bot.get_context(message)
        if ctx.command:
            await bot.invoke(ctx)
        return

    await bot.process_commands(message)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∞—Ç—á–µ–π –≤ –∫–∞–Ω–∞–ª–µ elobot-results
    if message.channel.name == "elobot-results" and message.attachments:
        score_match = re.search(r"(\d+)\s*-\s*(\d+)", message.content)
        if score_match:
            score1 = int(score_match.group(1))
            score2 = int(score_match.group(2))

            if score1 == score2:
                await message.channel.send(
                    "‚ùå –°—á–µ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–≤–Ω—ã–º! –ú–∞—Ç—á –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è."
                )
                return

        winner_score = max(score1, score2)
        loser_score = min(score1, score2)
        is_player1_winner = score1 > score2

        player_data = db_manager.fetchone(
            "players",
            "SELECT playername FROM players WHERE discordid = ?",
            (str(message.author.id),),
        )
        if not player_data:
            await message.channel.send("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
            return

        nickname = player_data[0]

        match_data = db_manager.fetchone(
            "matches",
            """
            SELECT matchid, player1, player2, mode 
            FROM matches 
            WHERE (player1 = ? OR player2 = ?) 
            AND isover = 0
            """,
            (nickname, nickname),
        )

        if not match_data:
            await message.channel.send("‚ùå –ê–∫—Ç–∏–≤–Ω—ã–π –º–∞—Ç—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        match_id, player1, player2, mode = match_data

        if is_player1_winner and nickname != player1:
            await message.channel.send(
                f"‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å ({player1})!"
            )
            return
        elif not is_player1_winner and nickname != player2:
            await message.channel.send(
                f"‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å ({player2})!"
            )
            return

        if nickname == player1:
            player1_score, player2_score = score1, score2
            winner, loser = player1, player2
        else:
            player1_score, player2_score = score2, score1
            winner, loser = player2, player1

        db_manager.execute(
            "matches",
            """
            UPDATE matches 
            SET player1score = ?, player2score = ?
            WHERE matchid = ?
            """,
            (player1_score, player2_score, match_id),
        )

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if player1_score > player2_score:
            db_manager.execute(
                "players",
                "UPDATE players SET wins = wins + 1 WHERE playername = ?",
                (winner,),
            )
            db_manager.execute(
                "players",
                "UPDATE players SET losses = losses + 1 WHERE playername = ?",
                (loser,),
            )

            if mode == MODES["station5f"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET wins_station5f = wins_station5f + 1 WHERE playername = ?",
                    (winner,),
                )
                db_manager.execute(
                    "players",
                    "UPDATE players SET losses_station5f = losses_station5f + 1 WHERE playername = ?",
                    (loser,),
                )
            elif mode == MODES["mots"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET wins_mots = wins_mots + 1 WHERE playername = ?",
                    (winner,),
                )
                db_manager.execute(
                    "players",
                    "UPDATE players SET losses_mots = losses_mots + 1 WHERE playername = ?",
                    (loser,),
                )
            elif mode == MODES["12min"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET wins_12min = wins_12min + 1 WHERE playername = ?",
                    (winner,),
                )
                db_manager.execute(
                    "players",
                    "UPDATE players SET losses_12min = losses_12min + 1 WHERE playername = ?",
                    (loser,),
                )

        elif player1_score < player2_score:
            db_manager.execute(
                "players",
                "UPDATE players SET wins = wins + 1 WHERE playername = ?",
                (winner,),
            )
            db_manager.execute(
                "players",
                "UPDATE players SET losses = losses + 1 WHERE playername = ?",
                (loser,),
            )

            if mode == MODES["station5f"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET wins_station5f = wins_station5f + 1 WHERE playername = ?",
                    (winner,),
                )
                db_manager.execute(
                    "players",
                    "UPDATE players SET losses_station5f = losses_station5f + 1 WHERE playername = ?",
                    (loser,),
                )
            elif mode == MODES["mots"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET wins_mots = wins_mots + 1 WHERE playername = ?",
                    (winner,),
                )
                db_manager.execute(
                    "players",
                    "UPDATE players SET losses_mots = losses_mots + 1 WHERE playername = ?",
                    (loser,),
                )
            elif mode == MODES["12min"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET wins_12min = wins_12min + 1 WHERE playername = ?",
                    (winner,),
                )
                db_manager.execute(
                    "players",
                    "UPDATE players SET losses_12min = losses_12min + 1 WHERE playername = ?",
                    (loser,),
                )
        else:
            db_manager.execute(
                "players",
                "UPDATE players SET ties = ties + 1 WHERE playername IN (?, ?)",
                (player1, player2),
            )

            if mode == MODES["station5f"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET ties_station5f = ties_station5f + 1 WHERE playername IN (?, ?)",
                    (player1, player2),
                )
            elif mode == MODES["mots"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET ties_mots = ties_mots + 1 WHERE playername IN (?, ?)",
                    (player1, player2),
                )
            elif mode == MODES["12min"]:
                db_manager.execute(
                    "players",
                    "UPDATE players SET ties_12min = ties_12min + 1 WHERE playername IN (?, ?)",
                    (player1, player2),
                )

        moderator = await bot.fetch_user(MODERATOR_ID)
        embed = discord.Embed(
            title="‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –º–∞—Ç—á–∞",
            description=(
                f"**Match ID:** {match_id}\n"
                f"**–†–µ–∂–∏–º:** {MODE_NAMES.get(mode, 'Unknown')}\n"
                f"**{player1}** vs **{player2}**\n"
                f"**–°—á–µ—Ç:** {player1_score}-{player2_score}"
            ),
            color=discord.Color.orange(),
        )

        view = ConfirmMatchView(match_id, bot, message.id)

        await moderator.send(
            embed=embed,
            view=view,
            files=[await attachment.to_file() for attachment in message.attachments],
        )

        try:
            await message.delete()
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –º–∞—Ç—á–∞ —É–¥–∞–ª–µ–Ω–æ: {message.id}")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        return

    await bot.process_commands(message)


@bot.event
async def on_disconnect():
    db_manager.close_all()
    print("–°–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î –∑–∞–∫—Ä—ã—Ç—ã")


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π
setup_queueing(bot)
setup_verification(bot)
setup_nickname_updater(bot)
setup_role_manager(bot)
setup_ban(bot)
tournament_test.setup(bot)


@bot.check
async def globally_check_ban(ctx):
    # –†–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –≤ —ç—Ç–∏—Ö –∫–∞–Ω–∞–ª–∞—Ö –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏
    if ctx.channel.name in ["elobot-verify", "elobot-logs"]:
        return True

    # –†–∞–∑—Ä–µ—à–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
    if ctx.author.id == MODERATOR_ID:
        return True

    player = db_manager.fetchone(
        "players",
        "SELECT isbanned FROM players WHERE discordid = ?",
        (str(ctx.author.id),),
    )

    if player and player[0] == 1:  # –ï—Å–ª–∏ isbanned == 1
        await ctx.send("‚õî –í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞.")
        return False
    return True


async def load_extensions():
    await bot.load_extension("tournaments")


@bot.event
async def setup_hook():
    bot.loop.create_task(find_match())
    bot.loop.create_task(check_expired_matches(bot))
    await load_extensions()


bot.run(token, log_handler=handler, log_level=logging.DEBUG)
